###########################################################################
###									###
### This Makefile.common is included by all other Makefiles and 	###
### isolates all machine/compiler specific settings. Adapt it to your	###
### environment or uncomment one of defines below			###
###									###
### Uncomment your C / C++ compiler and the compiler options		###
###									###
### CC= ...     must be defined for the C compiler			###
### CCC= ...    must be defined for the C++ compiler			###
### COPTS= ...  are the C compiler optimization options (e.g. -O2)	###
### CCOPTS= ... are the C++ compiler optimization options (e.g. -O2)	###
###									###
### LIBL= ...   the lex/flex library (/usr/lib/libl.a or libfl.a)	###
###									###
###									###
###########################################################################

# Hint for compilation with several Linux PC distributions:
# When linking it is sometimes not sufficient to use the flags -lX11 -lXpm 
# only. The path -L /usr/X11R6 must be set explicitly.

###########################################################################
# gcc version egcs-2.95.2 19991024 (release) on a Linux system
# Intel Pentium PC, use -m486 for 486 CPU or -mpentium for Pentium Systems
###########################################################################

# Checks whether we support the -march=native target
ifdef fast
ifneq ($(shell gcc --version|grep " 3."),)
ARCHFLAG=-O2
else
ifneq ($(shell gcc --version|grep " 4."),)
ARCHFLAG=-O2 -march=native
endif
endif
endif

# Checks for operating system types and architecture
ifeq ($(shell uname),Linux)
LINOPTS =-fPIC
ifeq ($(shell uname -m),x86_64)
ifdef OMP
ARCHFLAG+=-fopenmp
endif
ifdef b32
ARCHFLAG+=-m32
endif
endif
endif

# C compiler  ############################################################ 
CC= gcc -pipe $(ARCHFLAG)
#CC=icc
#COPTS= -ansi -O3 -fomit-frame-pointer -fforce-addr -mcpu=i486
COPTS= -DDEBUG 
COPTS=-ansi $(LINOPTS)
ifdef PROFILE
COPTS=-pg $(LINOPTS)
LDFLAGS=-pg 
endif

# C++ compiler ##########################################################
CCC= g++ $(ARCHFLAG)
#CCC=$(CC)
#CCC= g++ 

# Check for cygwin
ifneq (,$(findstring CYGWIN,$(shell uname)))
ifneq ($(shell gcc --version|grep " 3."),)
ARCHFLAG+=-mno-cygwin
endif
# To fix an error in spincf where min and max is used as variable names
#   and conflicts with definitions in <w32api/windef.h>
ARCHFLAG+=-DNOMINMAX
# Checks to see if we want to use the 64bit crosscompiler in Cygwin
ifdef cross64
CC=x86_64-w64-mingw32-gcc -pipe $(ARCHFLAG)
CCC=x86_64-w64-mingw32-g++ -pipe $(ARCHFLAG)
endif
endif

#debug flag
#DEBUG=debug

#                       Optimizer or ANSI standard?
ifdef DEBUG
CCOPTS  =  -g  -fomit-frame-pointer -fforce-addr -DDEBUG -fpermissive $(LINOPTS)
#CFLAGS  =       -c -g  -DDEBUG -Wall $(INCLDIRS)
else
#CCOPTS=  -fomit-frame-pointer -fforce-addr -march=pentium -fpermissive  -O3
ifdef PROFILE
CCOPTS  = -g -pg -fforce-addr -fpermissive $(LINOPTS)
else
CCOPTS  = -g -fforce-addr -fpermissive $(LINOPTS) #-fomit-frame-pointer
endif
endif

ifeq ($(CC),icc)
CCOPTS= -openmp -fPIC# -D "__sync_fetch_and_add(ptr,addend)=_InterlockedExchangeAdd(const_cast<void*>(reinterpret_cast<volatile void*>(ptr)), addend)"
COPTS=$(CCOPTS)
LDFLAGS= -openmp -lstdc++
endif

ifdef blas
#LBLAS=-L../../../ic1ionmodule/libs/GotoBLAS -lgoto -lpthread
LBLAS=-L../../../ic1ionmodule/libs -lblas -llapack -lgfortran
BLAS=-D_MATPACK_USE_BLAS_
endif

#CCOPTS= -O3 -fomit-frame-pointer -fforce-addr -mpentium
#CCOPTS= -O0 -DDEBUG -Wall

# for dec-unix
#CCC= g++
#CCOPTS= -O3 -fomit-frame-pointer -fforce-addr 

###########################################################################
#  LIBFLEX
LIBL= /usr/lib/libfl.a
